---
- name: BLOCK FOR QRADAR AMI
  when: security_console == 'qradar'
  block:
    - name: find ami for qradar
      ec2_ami_info:
        region: "{{ ec2_region }}"  # I don't know why but that seems to be the only place it's available
        owners: "{{ ec2_info['qradar']['owners'] }}"
        filters:
          name: "{{ ec2_info['qradar']['filter'] }}"
          architecture: "{{ ec2_info['qradar']['architecture'] }}"
      register: qradar_amis

    - name: save ami for qradar
      set_fact:
        qradar_ami: >
          {{ qradar_amis['images'] | selectattr('name', 'defined') | sort(attribute='creation_date') | last }}

qradar:
    owners: 324218975267
    size: t2.2xlarge
    os_type: linux
    disk_space: 300
    architecture: x86_64
    filter: 'AnsibleSecurity-QRadarCE*'
    username: ec2-user
    python_interpreter: '/usr/bin/python'

---
- name: Create EC2 instances for qradar
  ec2:
    assign_public_ip: true
    key_name: "{{ ec2_name_prefix }}-key"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_info['qradar']['size'] }}"
    image: "{{ qradar_ami['image_id'] }}"
    region: "{{ ec2_region }}"
    exact_count: "{{ student_total }}"
    count_tag:
      Workshop_qradar: "{{ ec2_name_prefix }}-qradar"
    instance_tags:
      Workshop_qradar: "{{ ec2_name_prefix }}-qradar"
      Workshop: "{{ ec2_name_prefix }}"
      Workshop_type: "{{ workshop_type }}"
      AWS_USERNAME: "{{ aws_user }}"
      Info: "AWS_USERNAME that provisioned this-> {{ aws_user }}"
      Linklight: "This was provisioned through the linklight provisioner"
      Students: "{{ student_total }}"
      short_name: "qradar"
      username: '{{ ec2_info["rhel8"]["username"] }}'
    wait: "{{ ec2_wait }}"
    vpc_subnet_id: "{{ ec2_vpc_subnet_id }}"
    volumes:
      - device_name: /dev/sda1
        volume_type: gp2
        volume_size: "{{ ec2_info['qradar']['disk_space'] }}"
        delete_on_termination: true
  when: security_console == 'qradar'
  async: "{{ async_timeout_seconds }}"
  poll: 0
  register: qradar_async
